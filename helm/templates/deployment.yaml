apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "docmost.fullname" . }}
  labels:
    {{- include "docmost.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "docmost.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "docmost.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "docmost.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: APP_URL
              value: "{{ .Values.env.APP_URL }}"
            - name: APP_SECRET
              value: "{{ .Values.env.APP_SECRET }}"
            - name: DATABASE_URL
              value: "{{ .Values.env.DATABASE_URL }}"
            - name: REDIS_URL
              value: "{{ .Values.env.REDIS_URL }}"
            - name: MAIL_DRIVER
              value: "{{ .Values.env.MAIL_DRIVER }}"
            - name: SMTP_HOST
              value: "{{ .Values.env.SMTP_HOST }}"
            - name: SMTP_PORT
              value: "{{ .Values.env.SMTP_PORT }}"
            - name: SMTP_USERNAME
              value: "{{ .Values.env.SMTP_USERNAME }}"
            - name: SMTP_PASSWORD
              value: "{{ .Values.env.SMTP_PASSWORD }}"
            - name: MAIL_FROM_ADDRESS
              value: "{{ .Values.env.MAIL_FROM_ADDRESS }}"
            - name: MAIL_FROM_NAME
              value: "{{ .Values.env.MAIL_FROM_NAME }}"
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: /app/data/storage
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.claimname }}
